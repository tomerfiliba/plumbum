name: CI

on:
  workflow_dispatch:
  push:
    branches:
    - master
    - main
  pull_request:
    branches:
    - master
    - main

env:
  FORCE_COLOR: 3

jobs:

  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - uses: pre-commit/action@v3.0.0
    - name: pylint
      run: |
        echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
        pipx run --python python nox -s pylint

  tests:
    name: Tests on 🐍 ${{ matrix.python-version }} ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.8", "3.11", "3.12-dev"]
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
        - python-version: 'pypy-3.8'
          os: ubuntu-latest
        - python-version: 'pypy-3.9'
          os: ubuntu-latest
        - python-version: '3.6'
          os: ubuntu-20.04
        exclude:
        - python-version: '3.6'
          os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v3
      if: runner.os == 'Linux' && startsWith(matrix.python-version, 'pypy')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-

    - name: Install
      run: |
        pip install wheel coveralls pytest-github-actions-annotate-failures
        pip install -e .[dev]

    - name: Setup SSH tests
      if: runner.os != 'Windows'
      run: |
        chmod 755 ~
        mkdir -p ~/.ssh
        chmod 755 ~/.ssh
        echo "NoHostAuthenticationForLocalhost yes" >> ~/.ssh/config
        echo "StrictHostKeyChecking no" >> ~/.ssh/config
        ssh-keygen -q -f ~/.ssh/id_rsa -N ''
        cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
        chmod 644 ~/.ssh/authorized_keys
        ls -la ~
        ssh localhost -vvv "echo 'Worked!'"

    - name: Test with pytest
      run: pytest --cov --run-optional-tests=ssh,sudo

    - name: Upload coverage
      run: coveralls --service=github
      env:
        COVERALLS_PARALLEL: true
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: test-${{ matrix.os }}-${{ matrix.python-version }}

  coverage:
    needs: [tests]
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - name: Install coveralls
      run: pip install coveralls
    - name: Coveralls Finished
      run: coveralls --service=github --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
