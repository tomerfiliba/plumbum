name: CI

on:
  workflow_dispatch:
  push:
    branches:
    - master
    - main
  pull_request:
    branches:
    - master
    - main

env:
  FORCE_COLOR: 3

jobs:

  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - uses: pre-commit/action@v3.0.1
    - name: pylint
      run: pipx run --python python nox -s pylint -- --output-format=github

  tests:
    name: Tests on 🐍 ${{ matrix.python-version }} ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.10", "3.13"]
        os: [ubuntu-latest, windows-latest, macos-13]
        include:
        - python-version: 'pypy-3.8'
          os: ubuntu-latest
        - python-version: 'pypy-3.10'
          os: ubuntu-latest
        - python-version: '3.9'
          os: ubuntu-latest
        - python-version: '3.13'
          os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true

    - name: Add locale for locale test
      if: runner.os == 'Linux' && matrix.python-version != '3.10'
      run: sudo locale-gen fr_FR.UTF-8

    - name: Setup uv (cached)
      uses: hynek/setup-cached-uv@v2

    - name: Install
      run: |
        uv pip install --system -e.[test] pytest-github-actions-annotate-failures --reinstall-package plumbum

    - name: Setup SSH tests
      if: runner.os != 'Windows'
      run: |
        chmod 755 ~
        mkdir -p ~/.ssh
        chmod 755 ~/.ssh
        echo "NoHostAuthenticationForLocalhost yes" >> ~/.ssh/config
        echo "StrictHostKeyChecking no" >> ~/.ssh/config
        ssh-keygen -q -f ~/.ssh/id_rsa -N ''
        cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
        chmod 644 ~/.ssh/authorized_keys
        ls -la ~
        ssh localhost -vvv "echo 'Worked!'"

    - name: Test with pytest
      run: pytest --cov --run-optional-tests=ssh,sudo

    - name: Upload coverage
      run: pipx run coveralls --service=github
      env:
        COVERALLS_PARALLEL: true
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: test-${{ matrix.os }}-${{ matrix.python-version }}

  coverage:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install coveralls
      run: pip install coveralls
    - name: Coveralls Finished
      run: coveralls --service=github --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
